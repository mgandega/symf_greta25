- conference
    - titre, description, lieu, prix, date, date

    CRUD (C create , R read , U update, D delete)

    // creation du projet:
    - symfony new symf_greta25 --webapp
    - composer create-project symfony/skeleton:"7.2.x" my_project_directory
    + cd my_project_directory
        composer require webapp

    // configurer la base de données
    - aller dans le fichier .env qui est à la racine du site puis decommenter la ligne (DATABASE_URL) où se trouve mysql
    
    // création de la base de données
    bin/console doctrine:database:create

    // creation de l'entité
    - bin/console make:entity
    - bin/console make:migrate (m:m)
    - bin/console doctrine:migrations:migrate (d:m:m)

    // création d'un formulaire d'ajout
    - bin/console make:form

    // création d'un controller 

// fixtures
les fixtures permettent de generer des objets avec leurs relations , ces fixtures combinées avec la librairie faker permettent de fournir ces objets de fausses données .

pour commencer avec les fixtures : 
 - il faut d'abord l'installer : composer require doctrine/doctrine-fixtures-bundle
 - pour installer faker : composer require fakerphp/faker
Pour faker il est préférable d'aller sur le site de packagist.org (où se trouve presque toutes les librairies de php) pour pouvoir avoir une aperçue sur la librairie en question.
 - pour chaque tour de boucle on ajoute une réference avec addReference() pour identifier l'entité,  cette methode prend comme premier parametre le nom de la référence et en deuxieme parametre l'objet de l'entité , cette réference sera récuperée par l'objet (par exemple conference) qui depend  de cet objet (image par exemple) et ainsi de suite

 // les evenements sont des evenement qui se declenche avant ou apres l'ajout d'une entité, avant ou apres la suppression d'une entité

 - prepersist : avant la persistance des données
 - postpersist : apres la persistance des données
 - preremove : avant la suppression des données
 - postremove : apres la suppression des données

    
